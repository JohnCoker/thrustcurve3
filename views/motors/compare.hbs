<h1>{{title}}</h1>

{{#unless motors}}
<p>
You haven't selected any motors for comparison.
As you view details of different motors, the ones you've seen most recently will be visible in
<a href="/motors/recent.html">Recently Viewed</a> and you can compare them.
</p>
{{/unless}}

{{#if motors}}
<p>
You selected {{length motors}}
{{#if multiClasses}}(in {{length impulseClasses}} impulse classes){{/if}}
{{#if singleClass}}({{singleClass}} impulse){{/if}}
motors for comparison.
If this isn't right, <a href="/motors/recent.html">go back to Recent Motors</a> and choose others.
</p>

<div class="row">
  <div class="col-md-6">
    <h2>Burn Time vs Impulse</h2>
    {{#if impulseBurnTimeImg}}
    <img id="impulseBurnTime" src="{{impulseBurnTimeImg}}" />
    {{/if}}
  </div>
  <div class="col-md-6">
    <h2>Avg Thrust vs Impulse</h2>
    {{#if impulseAvgThrustImg}}
    <img id="impulseAvgThrust" src="{{impulseAvgThrustImg}}" />
    {{/if}}
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <h2>Thrust Curve Overlay</h2>
    {{#if thrustCurveImg}}
    <img id="thrustCurve" src="{{thrustCurveImg}}" />
    {{/if}}
  </div>
</div>

<script type="text/javascript">
var Motors = {
{{#each motors}}
  "{{_id}}": {
    title: "{{motorFullName this}}",
    diameter: "{{formatMMT diameter}}",
    totalImpulse: "{{formatImpulse totalImpulse}}",
    avgThrust: "{{formatForce avgThrust}}",
    maxThrust: "{{formatForce maxThrust}}",
    burnTime: "{{formatDuration burnTime}}",
    detailLink: "{{motorLink this}}"
  },
{{/each}}
};

function popoverTitle() {
  var svg = $(this),
      id, info;

  id = svg.attr('id').replace(/[^-]*-/g, '');
  if (id && (info = Motors[id]))
    return info.title;
  else
    return svg.attr('title') || svg.attr('orig-title');
}

function popoverContent() {
  var svg = $(this),
      id, info;

  id = svg.attr('id').replace(/[^-]*-/g, '');
  if (id && (info = Motors[id])) {
    return ('<table class="stats">' +
            '<tr><td>Diameter:</td><td>' + info.diameter + '</td></tr>\n' +
            '<tr><td>Tot Impulse:</td><td>' + info.totalImpulse + '</td></tr>\n' +
            '<tr><td>Avg Thrust:</td><td>' + info.avgThrust + '</td></tr>\n' +
            '<tr><td>Max Thrust:</td><td>' + info.maxThrust + '</td></tr>\n' +
            '<tr><td>Burn Time:</td><td>' + info.burnTime + '</td></tr>\n' +
            '</table>\n' +
            '<i>click for motor page</i>');
  } else {
    return '';
  }
}

function hoverMotor() {
  var svg = $(this),
      id, info;

  id = svg.attr('id').replace(/[^-]*-/g, '');
  if (id) {
    $('.motor-point:not(.motor-point-' + id + ')').css('opacity', 0.35)
    $('.motor-point-' + id).css('font-weight', 'bold')
    $('.motor-curve:not(.motor-curve-' + id + ')').css('opacity', 0.35)
    $('.motor-curve-' + id).css('font-weight', 'bold')
  }
}

function leaveMotor() {
  $('.motor-point').css('opacity', 1).css('font-weight', 'normal');
  $('.motor-curve').css('opacity', 1).css('font-weight', 'normal');
}

function clickMotor() {
  var svg = $(this),
      id, info;

  id = svg.attr('id').replace(/[^-]*-/g, '');
  if (id && (info = Motors[id]))
    window.location = info.detailLink;
}

inlineSVG('#impulseBurnTime, #impulseAvgThrust, #thrustCurve', function(svg) {
  svg.find('g.motor-point, g.motor-curve')
     .removeAttr('title')
     .css('cursor', 'pointer')
     .popover({
       container: 'body',
       trigger: 'hover',
       html: true,
       delay: 50,
       title: popoverTitle,
       content: popoverContent,
     })
     .on('show.bs.popover', hoverMotor)
     .on('hide.bs.popover', leaveMotor)
     .click(clickMotor);
});
</script>

{{/if}}
